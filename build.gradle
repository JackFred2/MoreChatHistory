plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.1'
    id "com.modrinth.minotaur" version "2.+"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven {  // ModMenu
        url = 'https://maven.terraformersmc.com/'
        content {
            includeGroup "com.terraformersmc"
        }
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

curseforge {
    if (project.hasProperty("cf.key")) {
        apiKey = project.findProperty("cf.key")
        project {
            id = "518319"
            changelog = "Check the GitHub for changes: https://github.com/JackFred2/MoreChatHistory"
            releaseType = "release"

            addGameVersion "Fabric"
            addGameVersion "Java 17"

            project.game_versions.tokenize(",").each { addGameVersion it }

            mainArtifact(remapJar) {
                displayName = "${project.prefix} ${archivesBaseName}-${version}.jar"
            }

        }

        options {
            forgeGradleIntegration = false
        }
    }
}

modrinth {
    token = project.findProperty("modrinth.key")
    projectId = "8qkXwOnk"
    versionNumber = "mc${project.minecraft_version}-${project.mod_version}"
    versionName = "MoreChatHistory $project.mod_version"
    versionType = "release"
    uploadFile = remapJar
    changelog = "Check the GitHub for changes: https://github.com/JackFred2/MoreChatHistory"
    gameVersions = project.game_versions.tokenize(",")
    loaders = ["fabric", "quilt"]
}
